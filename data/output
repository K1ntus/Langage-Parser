


*************************************************
*** Fichier data/progr1.lea
[INFO] $$  : multiple line comment.
[INFO] $$$ : documentation comment.



* MOVE(NAME(a),CONST:100)
* MOVE(NAME(a),BINOP(2,CONST:5,CONST:2))
* CALL(NAME(println),NAME(a))
* MOVE(NAME(a),BINOP(1,NAME(a),CONST:1))
SEQ(Label(L0),SEQ(CJUMP(0,NAME(a),CONST:0,L1,L2),SEQ(Label(L1),SEQ(SEQ(EXP(CALL(NAME(println),NAME(a))),MOVE(NAME(a),BINOP(1,NAME(a),CONST:1))),SEQ(JUMP(NAME(L0),L0),Label(L2))))))
Programme y86 :

.pos 0
a:
	.long 0
b:
	.long 0
c:
	.long 0
d:
	.long 0

Init:
	irmovl 0x498,%esp
	irmovl 0x498,%ebp
.pos 0x498

main:
	irmovl 5,%eax
	pushl %eax
	irmovl 2,%eax
	pushl %eax
	call mult
	iaddl 8,%esp
	mrmovl la,%eax
	isubl 1,%eax
	mrmovl la,%eax
	halt
	.align 4
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeOp
- NodeOp well typed
- Assign well typed
--- CheckType NodeWhile
- NodeList well typed
*** Typage correct



*************************************************
*** Fichier data/progr2.lea
[INFO] $$  : multiple line comment.
[INFO] $$$ : documentation comment.


//
// gestion des variables statiques
//
// 0x4995F6B5

* MOVE(NAME(x),CONST:1234564789)
* MOVE(NAME(y),CONST:2147483647)
* MOVE(NAME(b),CONST:1)
* MOVE(NAME(c),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:1)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:2)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:3)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:10)),CONST:-1)
* CALL(NAME(println),NAME(x))
* CALL(NAME(println),NAME(y))
* CALL(NAME(println),NAME(b))
* CALL(NAME(println),NAME(c))
* CALL(NAME(println),MEM(BINOP(0,NAME(d),CONST:2)))
Programme y86 :

.pos 0
b:
	.long 0
c:
	.long 0
d:
	.long 0
x:
	.long 0
y:
	.long 0

Init:
	irmovl 0x642,%esp
	irmovl 0x642,%ebp
.pos 0x642

main:
	halt
	.align 4
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeId
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
- ArrayAccess well typed
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
- ArrayAccess well typed
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
- ArrayAccess well typed
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
- ArrayAccess well typed
--- CheckType NodeLiteral
- Assign well typed
--- CheckType NodeCallFct
--- CheckType NodeId
- NodeCallFct well typed
--- CheckType NodeCallFct
--- CheckType NodeId
- NodeCallFct well typed
--- CheckType NodeCallFct
--- CheckType NodeId
- NodeCallFct well typed
--- CheckType NodeCallFct
--- CheckType NodeId
- NodeCallFct well typed
--- CheckType NodeCallFct
--- CheckType NodeArrayAccess
- ArrayAccess well typed
- NodeCallFct well typed
- NodeList well typed
*** Typage correct



*************************************************
*** Fichier data/progr3.lea
[INFO] $$  : multiple line comment.
[INFO] $$$ : documentation comment.


// gestion des variables statiques
// gestion du tas et des pointeurs
// 
// 0x4995F6B5
// 0x41
// resize the heap
// heap memory error

* MOVE(NAME(x),CONST:1234564789)
* MOVE(NAME(y),CONST:2147483647)
* MOVE(NAME(b),CONST:1)
* MOVE(NAME(c),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:1)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:2)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:3)),CONST:-1)
* MOVE(MEM(BINOP(0,NAME(d),CONST:10)),CONST:-1)
* CALL(NAME(println),NAME(x))
* CALL(NAME(println),NAME(y))
* CALL(NAME(println),NAME(b))
* CALL(NAME(println),NAME(c))
* CALL(NAME(println),MEM(BINOP(0,NAME(d),CONST:2)))
* MOVE(MEM(NAME(q)),CONST:-1)
* CALL(NAME(println),MEM(NAME(q)))
* CALL(NAME(println),NAME(p))
* CALL(NAME(println),NAME(p))
* MOVE(MEM(MEM(NAME(p))),NAME(x))
* CALL(NAME(println),MEM(NAME(p)))
* MOVE(MEM(NAME(r)),CONST:65536)
* CALL(NAME(println),MEM(NAME(r)))
* CALL(NAME(println),NAME(p))
* CALL(NAME(println),MEM(NAME(p)))
